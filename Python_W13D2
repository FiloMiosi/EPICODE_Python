{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b9b3e22c-b8f9-4b32-9f96-0f5d6b419610",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "E\n",
      "p\n",
      "i\n",
      "c\n",
      "o\n",
      "d\n",
      "e\n"
     ]
    }
   ],
   "source": [
    "nome_scuola = \"Epicode\"\n",
    "indice = 0\n",
    "\n",
    "while indice < len(nome_scuola):\n",
    "    print(nome_scuola[indice])\n",
    "    indice += 1\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "9ba51c27-edf1-491b-8f37-5d82afba50a4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0\n",
      "1\n",
      "2\n",
      "3\n",
      "4\n",
      "5\n",
      "6\n",
      "7\n",
      "8\n",
      "9\n",
      "10\n",
      "11\n",
      "12\n",
      "13\n",
      "14\n",
      "15\n",
      "16\n",
      "17\n",
      "18\n",
      "19\n",
      "20\n"
     ]
    }
   ],
   "source": [
    "numero = 0\n",
    "\n",
    "while numero <= 20:\n",
    "    print(numero)\n",
    "    numero += 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e6b7dcfa-f6c7-46f6-af96-2ef342f81180",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2^0 = 1\n",
      "2^1 = 2\n",
      "2^2 = 4\n",
      "2^3 = 8\n",
      "2^4 = 16\n",
      "2^5 = 32\n",
      "2^6 = 64\n",
      "2^7 = 128\n",
      "2^8 = 256\n",
      "2^9 = 512\n"
     ]
    }
   ],
   "source": [
    "potenza = 0\n",
    "\n",
    "while potenza < 10:\n",
    "    risultato = 2 ** potenza\n",
    "    print(f\"2^{potenza} = {risultato}\")\n",
    "    potenza += 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "4543da69-8921-4b4e-a4ce-799058bc245b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Inserisci il valore di N:  5\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2^0 = 1\n",
      "2^1 = 2\n",
      "2^2 = 4\n",
      "2^3 = 8\n",
      "2^4 = 16\n"
     ]
    }
   ],
   "source": [
    "N = int(input(\"Inserisci il valore di N: \"))\n",
    "potenza = 0\n",
    "\n",
    "while potenza < N:\n",
    "    risultato = 2 ** potenza\n",
    "    print(f\"2^{potenza} = {risultato}\")\n",
    "    potenza += 1\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "56af5d8e-6e08-41ae-99a1-2e1bdac293d4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2^0 = 1\n",
      "2^1 = 2\n",
      "2^2 = 4\n",
      "2^3 = 8\n",
      "2^4 = 16\n",
      "2^5 = 32\n",
      "2^6 = 64\n",
      "2^7 = 128\n",
      "2^8 = 256\n",
      "2^9 = 512\n",
      "2^10 = 1024\n",
      "2^11 = 2048\n",
      "2^12 = 4096\n",
      "2^13 = 8192\n",
      "2^14 = 16384\n"
     ]
    }
   ],
   "source": [
    "potenza = 0\n",
    "risultato = 1\n",
    "\n",
    "while risultato < 25000:\n",
    "    print(f\"2^{potenza} = {risultato}\")\n",
    "    potenza += 1\n",
    "    risultato = 2 ** potenza\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "2e0f6d98-c424-4dde-8f37-457bec6325bf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Cybersecurity', 'Data Analyst', 'Backend', 'Frontend', 'Data Analyst', 'Backend', 'Frontend', 'Cybersecurity']\n"
     ]
    }
   ],
   "source": [
    "studenti = [\"Alex\", \"Bob\", \"Cindy\", \"Dan\", \"Emma\", \"Faith\", \"Grace\", \"Henry\"]\n",
    "corsi = [\"Cybersecurity\", \"Data Analyst\", \"Backend\", \"Frontend\", \"Data Analyst\", \"Backend\"]\n",
    "\n",
    "if corsi.count(\"Data Analyst\") < 2:\n",
    "    corsi.append(\"Data Analyst\")\n",
    "if corsi.count(\"Backend\") < 2:\n",
    "    corsi.append(\"Backend\")\n",
    "if corsi.count(\"Frontend\") < 2:\n",
    "    corsi.append(\"Frontend\")\n",
    "if corsi.count(\"Cybersecurity\") < 2:\n",
    "    corsi.append(\"Cybersecurity\")\n",
    "\n",
    "if len(studenti) == len(corsi):\n",
    "    print(corsi)\n",
    "else:\n",
    "    print(\"Le liste non sono della stessa lunghezza.\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "3697777b-fda1-4b14-a7e0-5e20ed04a323",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Inserisci una stringa:  Ciao\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cia...iao\n"
     ]
    }
   ],
   "source": [
    "stringa = input(\"Inserisci una stringa: \")\n",
    "\n",
    "lunghezza = len(stringa)\n",
    "\n",
    "if lunghezza < 3:\n",
    "    print(\"La stringa è troppo corta.\")\n",
    "elif lunghezza == 3:\n",
    "    print(stringa)\n",
    "else:\n",
    "    primi_3 = stringa[:3]\n",
    "    ultimi_3 = stringa[-3:]\n",
    "    print(f\"{primi_3}...{ultimi_3}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "763f986c-a71e-4987-a013-93379dfdff69",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Inserisci un numero:  3\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "I fattori di 1 sono: [3]\n"
     ]
    }
   ],
   "source": [
    "numero = int(input(\"Inserisci un numero: \"))\n",
    "fattori = []\n",
    "\n",
    "for i in range(2, numero + 1):\n",
    "    while numero % i == 0:\n",
    "        fattori.append(i)\n",
    "        numero //= i\n",
    "\n",
    "print(f\"I fattori di {numero} sono: {fattori}\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "1b8b464b-81dc-4d8c-a753-f7d584a85c31",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "E\n",
      "p\n",
      "i\n",
      "c\n",
      "o\n",
      "d\n",
      "e\n"
     ]
    }
   ],
   "source": [
    "nome_scuola = \"Epicode\"\n",
    "\n",
    "for carattere in nome_scuola:\n",
    "    print(carattere)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "5ff829d1-9ee4-47da-b4da-a788c452beab",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Le prime 10 potenze di 2 sono:\n",
      "1\n",
      "2\n",
      "4\n",
      "8\n",
      "16\n",
      "32\n",
      "64\n",
      "128\n",
      "256\n",
      "512\n"
     ]
    }
   ],
   "source": [
    "potenze_di_due = []\n",
    "\n",
    "for esponente in range(10):\n",
    "    potenza = 2 ** esponente\n",
    "    potenze_di_due.append(potenza)\n",
    "\n",
    "print(\"Le prime 10 potenze di 2 sono:\")\n",
    "for potenza in potenze_di_due:\n",
    "    print(potenza)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "2e4079ba-23d4-4fe0-ae49-88ce58025725",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Inserisci il numero di potenze:  5\n",
      "Inserisci la base:  2\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Le prime 5 potenze di 2 sono: [1, 2, 4, 8, 16]\n"
     ]
    }
   ],
   "source": [
    "N = int(input(\"Inserisci il numero di potenze: \"))\n",
    "K = int(input(\"Inserisci la base: \"))\n",
    "\n",
    "potenze_di_K = []\n",
    "esponente = 0\n",
    "\n",
    "while len(potenze_di_K) < N:\n",
    "    potenza = K ** esponente\n",
    "    potenze_di_K.append(potenza)\n",
    "    esponente += 1\n",
    "\n",
    "print(\"Le prime\", N, \"potenze di\", K, \"sono:\", potenze_di_K)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "dda7bf00-e245-4657-8a4c-ae63e7a87a12",
   "metadata": {},
   "outputs": [
    {
     "name": "stdin",
     "output_type": "stream",
     "text": [
      "Inserisci il numero di potenze:  5\n",
      "Inserisci la base:  2\n"
     ]
    }
   ],
   "source": [
    "N = int(input(\"Inserisci il numero di potenze: \"))\n",
    "K = int(input(\"Inserisci la base: \"))\n",
    "\n",
    "potenze_di_K = []\n",
    "\n",
    "for esponente in range(N):\n",
    "    potenza = K ** esponente\n",
    "    potenze_di_K.append(potenza)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "017dd14f-1bf4-4740-9d92-14a02eee7c3a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "La media dei guadagni degli ultimi 12 mesi è: 70.0\n"
     ]
    }
   ],
   "source": [
    "guadagni = [100, 90, 70, 40, 50, 80, 90, 120, 80, 20, 50, 50]\n",
    "\n",
    "totale_guadagni = 0\n",
    "numero_mesi = len(guadagni)\n",
    "\n",
    "for guadagno in guadagni:\n",
    "    totale_guadagni += guadagno\n",
    "\n",
    "media_guadagni = totale_guadagni / numero_mesi\n",
    "\n",
    "print(\"La media dei guadagni degli ultimi 12 mesi è:\", media_guadagni)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "4611a8d3-968f-4882-aa00-6b1f7b1e050a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Nella parola 'Albergo' la lettera 'e' appare 1 volte.\n",
      "Nella parola 'Sedia' la lettera 'e' appare 1 volte.\n",
      "Nella parola 'Borgo' la lettera 'e' appare 0 volte.\n",
      "Nella parola 'Petalo' la lettera 'e' appare 1 volte.\n",
      "Nella parola 'Eremo' la lettera 'e' appare 2 volte.\n",
      "Nella parola 'Belvedere' la lettera 'e' appare 4 volte.\n",
      "Nella parola 'Semestre' la lettera 'e' appare 3 volte.\n",
      "Nella parola 'Esteta' la lettera 'e' appare 2 volte.\n",
      "Nella parola 'Sosta' la lettera 'e' appare 0 volte.\n",
      "Nella parola 'Orpello' la lettera 'e' appare 1 volte.\n",
      "Nella parola 'Abete' la lettera 'e' appare 2 volte.\n",
      "Nella parola 'Orologio' la lettera 'e' appare 0 volte.\n",
      "Nella parola 'Cesta' la lettera 'e' appare 1 volte.\n",
      "Nella parola 'Ermellino' la lettera 'e' appare 2 volte.\n"
     ]
    }
   ],
   "source": [
    "parole = [\"Albergo\", \"Sedia\", \"Borgo\", \"Petalo\", \"Eremo\", \"Belvedere\", \"Semestre\", \"Esteta\", \"Sosta\", \"Orpello\", \"Abete\", \"Orologio\", \"Cesta\", \"Ermellino\"]\n",
    "\n",
    "for parola in parole:\n",
    "    conteggio_e = parola.lower().count('e')\n",
    "    print(f\"Nella parola '{parola}' la lettera 'e' appare {conteggio_e} volte.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "590ccc2e-1266-4cfa-8957-4318300a361f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
